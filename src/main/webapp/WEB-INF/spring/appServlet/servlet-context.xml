<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation=
		"http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- Enables validation -->
	<annotation-driven validator="validator" />

	<!-- Enable controller method level security -->
	<security:global-method-security pre-post-annotations="enabled"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up 
		static resources in the ${webappRoot}/resources directory -->
	<!-- TODO too many locations?? -->
	<resources mapping="/resources/**" location="/resources/, /images/, /styles/, /, classpath:/META-INF/web-resources/" />

	<default-servlet-handler />

	
	<context:component-scan base-package="edu.avans.hartigehap.web.controller" />
	
	<interceptors>
		<beans:bean	class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
		<beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
			p:paramName="lang"/>
	</interceptors>	
	
	<beans:bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource" p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application"
		p:fallbackToSystemLocale="false"/>
	<beans:bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
		id="localeResolver" p:cookieName="locale"/>
	
	<beans:bean class="org.springframework.ui.context.support.ResourceBundleThemeSource"
		id="themeSource"/>
	<beans:bean class="org.springframework.web.servlet.theme.CookieThemeResolver" id="themeResolver"
		p:cookieName="theme" p:defaultThemeName="standard"/>


	<!-- Add the following beans -->
	<!-- Tiles Configuration -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		id="tilesViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</beans:bean>
	<beans:bean
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
		id="tilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/layouts/layouts.xml</beans:value>
				<!-- Scan views directory for Tiles configurations -->
				<beans:value>/WEB-INF/views/**/views.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<beans:property name="validationMessageSource" ref="messageSource"/>
	</beans:bean>

	<beans:bean
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver"
		id="multipartResolver" />
    
    
     <!-- Configures view for returning JSON to the client -->
  <beans:bean id="jsonView"
    class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
  </beans:bean>
  <beans:bean id="jsonMessageConverter"
    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

  <beans:bean id="xmlView"
    class="org.springframework.web.servlet.view.xml.MarshallingView">
    <beans:property name="marshaller" ref="castorMarshaller" />
  </beans:bean>

  <beans:bean id="marshallingHttpMessageConverter"
    class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
    <beans:property name="marshaller" ref="castorMarshaller" />
    <beans:property name="unmarshaller" ref="castorMarshaller" />
  </beans:bean>
  <beans:bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" />

</beans:beans>
